##  LAB: Console and Cloud Shell

##  Overview:
	In this lab, you become familiar with the Google Cloud web-based interface. There are two integrated environments: a GUI (graphical user interface) environment called the Cloud Console, and a CLI (command-line interface) called Cloud Shell. In this class you use both environments.

	Here are a few things you need to know about the Cloud Console:

	- The Cloud Console is under continuous development, so occasionally the graphical layout changes. This is most often to accommodate new Google Cloud features or changes in the technology, resulting in a slightly different workflow.

	- You can perform most common Google Cloud actions in the Cloud Console, but not all actions. In particular, very new technologies or sometimes detailed API or command options are not implemented (or not yet implemented) in the Cloud Console. In these cases, the command line or the API is the best alternative.

	- The Cloud Console is extremely fast for some activities. The Cloud Console can perform multiple actions on your behalf that might require many CLI commands. It can also perform repetitive actions. In a few clicks you can accomplish activities that would require a great deal of typing and would be prone to typing errors.

	- The Cloud Console is able to reduce errors by only offering up through its menus valid options. It is able to leverage access to the platform "behind the scenes" through the SDK to validate configuration before submitting changes. A command line can't do this kind of dynamic validation.

##  Objectives:
	In this lab, you learn how to perform the following tasks:

	- Get access to Google Cloud.

	- Create a Cloud Storage bucket using the Cloud Console.

	- Create a Cloud Storage bucket using Cloud Shell.

	- Become familiar with Cloud Shell features.

##  Steps:

 1. Create a bucket using the Cloud Console.

	gsutil mb gs://<BUCKET_NAME>
 

2. Create a bucket using Cloud Shell.

	gsutil mb gs://<BUCKET_NAME>


3. Explore more Cloud Shell features.

- Upload a file

- Click the three dots icon in the Cloud Shell toolbar to display further options.

- Click Upload file. Upload any file from your local machine to the Cloud Shell VM. This file will be referred to as [MY_FILE].

- In Cloud Shell, type ls to confirm that the file was uploaded.

- Copy the file into one of the buckets you created earlier in the lab. Replace [MY_FILE] with the file you uploaded and [BUCKET_NAME] with one of your bucket names:


	gsutil cp [MY_FILE] gs://[BUCKET_NAME]


- Result: You have uploaded a file to the Cloud Shell VM and copied it to a bucket.


4. Create a persistent state in Cloud Shell.

- To list available regions, execute the following command:

	gcloud compute regions list


- Select a region from the list and note the value in any text editor. This region will now be referred to as [YOUR_REGION] in the remainder of the lab

- Create an environment variable and replace [YOUR_REGION] with the region you selected in the previous step:

	INFRACLASS_REGION=[YOUR_REGION]


- Verify it with echo:

	echo $INFRACLASS_REGION


- Create a subdirectory for materials used in this class:
	
	mkdir infraclass


- Create a file called config in the infraclass directory:

	touch infraclass/config


- Append the value of your Region environment variable to the config file:

	echo INFRACLASS_REGION=$INFRACLASS_REGION >> ~/infraclass/config


- Create a second environment variable for your Project ID, replacing [YOUR_PROJECT_ID] with your Project ID. You can find the project ID on the Cloud Console Home page.

	INFRACLASS_PROJECT_ID=[YOUR_PROJECT_ID]


- Append the value of your Project ID environment variable to the config file:

	echo INFRACLASS_PROJECT_ID=$INFRACLASS_PROJECT_ID >> ~/infraclass/config


- Use the source command to set the environment variables, and use the echo command to verify that the project variable was set:

	source infraclass/config
	echo $INFRACLASS_PROJECT_ID


- Close and re-open Cloud Shell. Then issue the echo command again:

	echo $INFRACLASS_PROJECT_ID

- Result: There will be no output because the environment variable no longer exists.


- Edit the shell profile with the following command:

	nano .profile


- Add the following line to the end of the file:

	source infraclass/config


- Press Ctrl+O, ENTER to save the file, and then press Ctrl+X to exit nano.

- Close and then re-open Cloud Shell to cycle the VM.

- Use the echo command to verify that the variable is still set:

	echo $INFRACLASS_PROJECT_ID


- Result: You will now see your Project ID...

